import numpy as np
import matplotlib.pyplot as plt

"""same shearExp (0.1), varied spacing"""
# # COE = np.array([ 75.67635214,  75.55291267,  74.39339258,  74.1463871,   72.94503717,
# #   72.80874768,  72.73403437,  71.84903462,  71.9462904 ,  71.29180281,
# #   70.78139466,  70.41553577,  70.2201594 ,  70.39384607,  69.56044368,
# #   69.29771522,  68.72418308,  68.37151299,  68.01394753,  67.8031657,
# #   67.33544708,  66.79984399,  66.36127994])
# # AEP = np.array([  2.83749472e+08,   2.84948564e+08,   2.89748631e+08,   2.90762722e+08,
# #    2.95951570e+08,   2.96519590e+08,   2.96816271e+08,   3.00776693e+08,
# #    3.00297904e+08,   3.03298929e+08,   3.05687150e+08,   3.07566211e+08,
# #    3.08859317e+08,   3.08058135e+08,   3.13192205e+08,   3.14206452e+08,
# #    3.15492980e+08,   3.17251352e+08,   3.19055782e+08,   3.20118506e+08,
# #    3.22537184e+08,   3.25357396e+08,   3.27699958e+08])
# #
# # diffArray = np.array([  5.16380677e+01 ,  5.22963338e+01,   5.22737207e+01  , 5.22516398e+01,
# #    5.22300855e+01 ,  5.22090462e+01 ,  5.21885129e+01 ,  5.21684788e+01,
# #    5.21489335e+01 ,  5.21421997e+01 ,  5.21408578e+01 ,  5.22279235e+01,
# #    5.24382975e+01 ,  4.94728901e+01 ,  4.94560276e+01 ,  4.23769977e+01,
# #    1.12261582e+01 ,  9.11860032e+00 ,  2.77311064e+00 ,  3.14362438e-08,
# #    8.19702265e-07 ,  1.87093605e-07 ,  1.93038503e-07])
# COE = np.array([ 74.07836987,  74.10512586 , 72.62276517 , 73.357946,    70.6452008,
#   69.99568977 , 69.96618652,  73.47484095 , 69.63467875 , 69.53241454,
#   68.86461635  ,68.85518062 , 68.34271312 , 67.49697907 , 67.52358484,
#   67.5635014  , 67.17551755 , 66.26406808 , 66.46352913])
# AEP = np.array([  2.90671670e+08 ,  2.90977023e+08  , 2.60256680e+08   ,2.57410807e+08,
#    2.93768742e+08 ,  2.97091128e+08 ,  2.97069795e+08 ,  2.58966787e+08,
#    3.01994405e+08 ,  3.03759404e+08 ,  3.09535064e+08 ,  3.14863564e+08,
#    3.15268815e+08  , 3.21770992e+08 ,  3.21603314e+08  , 3.21366944e+08,
#    3.23381905e+08 ,  3.28255265e+08 ,  3.27144759e+08])
# diffArray = np.array([  5.18802729e+01 ,  5.22737190e+01  , 5.21885121e+01  , 5.21684782e+01,
#    7.05113997e-05  , 2.22417457e-06,   3.63285317e+00 ,  4.84673551e+01,
#    2.38380991e-07 ,  4.36829190e-02 ,  1.28846309e-01 ,  1.13120061e+01,
#    9.03911759e-02 ,  9.11859820e+00 ,  2.42180761e-07 ,  1.38986069e-06,
#    1.72040160e-07 ,  6.97737777e-06 ,  3.26194555e-06])
#
#
#
#
# COEsame = np.array([ 71.20602998,  71.41702664 , 71.76635833,  71.83051101,  71.66668909,
#   71.02450223 , 70.76479821,  70.93568141,  70.64626335,  70.04236143,
#   70.04445816 , 69.43836676 , 69.62679062,  69.54680147,  68.85727007,
#   68.72263603 , 68.34665243 , 67.49508654,  67.62732668,  67.58960056,
#   67.14827921 , 66.26298095 , 66.46516781])
# AEPsame = np.array([  2.67648368e+08 ,  2.70521753e+08  , 2.72774547e+08 ,  2.76424318e+08,
#    2.80052384e+08  , 2.86579290e+08 ,  2.88701481e+08  , 2.90985481e+08,
#    2.93763964e+08  , 2.96874247e+08 ,  2.97311476e+08 ,  3.01523526e+08,
#    3.02031911e+08  , 3.03866613e+08 ,  3.09615604e+08 ,  3.11054720e+08,
#    3.15280134e+08  , 3.20926118e+08 ,  3.21060967e+08  , 3.21230520e+08,
#    3.23526212e+08  , 3.28261198e+08 ,  3.27135896e+08])
# turbineH1same = np.array([  76.38344455,   83.05257314,   89.36835554 ,  95.78823549 , 100.32893391,
#   105.87058527,  107.22745825 , 111.28558233 , 113.17603337 , 113.58682222,
#   114.09003277,  115.55217987 , 116.99775443 , 118.41938497 , 120.66244253,
#   121.36852416,  123.42151706 , 124.49202776,  125.17868987 , 125.16402911,
#   125.1497728  , 125.13591474 , 125.12244869])
#
# shear_ex = np.array([0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3])
# shear_ex_diff = np.array([0.09,0.1,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3])
#
# plt.figure(1)
# plt.plot(shear_ex_diff, COE)
# plt.plot(shear_ex,COEsame,'r')
#
# plt.figure(2)
# plt.plot(shear_ex_diff, AEP)
# plt.plot(shear_ex,AEPsame,'r')
#
# plt.figure(3)
# plt.plot(shear_ex_diff, diffArray)
#
# plt.show()
#



# shearEx = np.array([0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17])
# COE=np.array([ 71.65697173 , 74.52082566 , 73.45541104  ,72.02382904 , 74.33601209,
#   74.13049066 , 71.80568816 , 71.49957683 , 73.30527177 , 71.80178423])
# AEP=np.array([  2.65646884e+08 ,  2.61246548e+08 ,  2.65752392e+08 ,  2.75610966e+08,
#    2.72428249e+08 ,  2.74811766e+08,   2.84418940e+08 ,  2.88850054e+08,
#    2.82426460e+08 ,  2.88923070e+08])
# plt.figure(1)
# plt.plot(shearEx, COE)
# plt.figure(2)
# plt.plot(shearEx, AEP)
# plt.show()
#
# space = np.array([2.0,2.5,3.0,3.5,4.0,5.0])
# space = (space*4)**2
#
# #SAME
# COEsame = np.array([ 99.34183818,  83.91513794,  75.62531924,  70.60344752,  67.28592267,
#   63.27214169])
# AEPsame = np.array([  2.03321810e+08,   2.42912370e+08,   2.71830888e+08,   2.92697641e+08,
#    3.09084416e+08,   3.30732013e+08])
# turbineH1same = np.array([ 113.03881058,  111.96512308,  111.89737449,  111.51420242,  112.13689311,
#   112.07411903])
# turbineH2same = np.array([ 113.03881058,  111.96512308,  111.89737449,  111.51420242,  112.13689311,
#   112.07411903])
# diffArraysame = np.array([ 0.,  0.,  0.,  0.,  0.,  0.])
#
#
# #diff
# COEdiff = np.array([ 88.82850753,  78.23547601,  72.39661001,  68.64064142,  66.06122056,
#   62.9536135 ])
# AEPdiff = np.array([  2.36634250e+08,   2.65571068e+08,   2.83003249e+08,   2.97580734e+08,
#    3.10206906e+08,   3.27166149e+08])
# turbineH1diff = np.array([ 138.46392492,  133.53826575,  128.02279035,  125.66605347,  125.473719,
#   125.473719  ])
# turbineH2diff = np.array([ 73.2,         73.2,         73.2,         73.2,         73.2,         73.20128857])
# diffArraydiff = np.array([ 65.26392492,  60.33826575,  54.82279035,  52.46605347,  52.273719,
#   52.27243042])
#
# #original
# COEorg = np.array([ 108.34721034,   91.43963369,   82.34806216,   76.84013981,   73.2022151,
#    68.80025702])
# AEPorg = np.array([  1.89884033e+08,   2.27508463e+08,   2.54639392e+08,   2.74468760e+08,
#    2.89351212e+08,   3.09668754e+08])
#
# #worst
# COEworst = np.array([ 108.34721034,   93.18713405,   84.05304211,   78.15644615,   74.15876109,
#    69.27362755])
# AEPworst = np.array([  1.89884033e+08,   2.22942728e+08,   2.49069234e+08,   2.69454148e+08,
#    2.85283868e+08,   3.07347987e+08])
#
# COEyaw = np.array([ 85.81131667,  76.45807679,  70.70901492 , 67.45629835 , 65.29071719,
#   62.73174882])
# AEPyaw = np.array([  2.54708494e+08 ,  2.80404677e+08,   2.96931910e+08 ,  3.09353941e+08,
#    3.20428700e+08 ,  3.34910541e+08])
# #
# #
# plt.figure(1)
# plt.plot(space, COEworst, c='k', label='Grid')
# plt.plot(space, COEorg, c='g', label='Opt XY')
# plt.plot(space, COEsame, c='r', label='Opt XYZ: Same')
# plt.plot(space, COEdiff, c='b', label = 'Opt XYZ: Diff')
# plt.plot(space, COEyaw, c='m', label='Opt XYZ: Diff \n & Yaw')
#
#
# plt.plot(space, COEsame, 'or')
# plt.plot(space, COEdiff, 'ob')
# plt.plot(space, COEorg, 'og')
# plt.plot(space, COEworst, 'ok')
# plt.plot(space, COEyaw, 'om')
# leg = plt.legend(loc=1)
# leg.get_frame().set_alpha(0.0)
# # plt.legend()
# plt.title('COE vs Spacing')
# plt.xlabel('Wind Farm Area (rotor diameters$^2$)')
# plt.ylabel('COE ($/MWhr)')
# # plt.savefig('COE_wrt_spacing.pdf', transparent=True)
#
# AEPdiff = AEPdiff/10**6
# AEPsame = AEPsame/10**6
# AEPorg = AEPorg/10**6
# AEPworst = AEPworst/10**6
# AEPyaw = AEPyaw/10**6
# plt.figure(2)
# plt.plot(space, AEPyaw, c='m', label = 'Opt XYZ: Diff \n and Yaw')
# plt.plot(space, AEPdiff, c='b', label = 'Opt XYZ: Diff')
# plt.plot(space, AEPsame, c='r', label='Opt XYZ: Same')
# plt.plot(space, AEPorg, c='g', label='Opt XY')
# plt.plot(space, AEPworst, c='k', label='Grid')
# plt.plot(space, AEPyaw, 'om')
# plt.plot(space, AEPsame, 'or')
# plt.plot(space, AEPdiff, 'ob')
# plt.plot(space, AEPorg, 'og')
# plt.plot(space, AEPworst, 'ok')
# # leg = plt.legend(loc=2)
# # leg.get_frame().set_alpha(0.0)
# # plt.legend(loc=2)
# plt.title('AEP vs Spacing')
# plt.xlabel('Wind Farm Area (rotor diameters$^2$)')
# plt.ylabel('AEP (GWhrs)')
# # plt.savefig('AEP_wrt_spacing.pdf', transparent=True)
# plt.show()
#
# plt.figure(3)
# plt.ylim([0, 70])
# plt.plot(space, diffArraydiff)
# plt.title('Height Diff vs. Spacing')
# plt.xlabel('Wind Farm Area (rotor diameters$^2$)')
# plt.scatter(space, diffArraydiff)
# plt.ylabel('Height Difference: H1-H2 (m)')
# plt.show()
# #
# #
# #
# # """same spacing (3.1), varied shearExp"""
# #
shear_ex = np.array([0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29])
shear_ex = np.array([0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29])
shear_exSNOPT = np.array([0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18])
#diff
COEdiff = np.array([ 73.22088084,  73.04732056,  72.90956135,  72.81718533,  72.66720182,
  72.52598988,  72.34327117,  72.09806923,  71.88276271,  71.72541392,
  71.44782218,  71.29048836,  70.96495923,  70.56917743,  70.12086854,
  66.82379056,  66.23847208,  65.96461506,  65.46093303,  65.03261136,
  64.68034956,  63.88017337])

AEPdiff = np.array([  2.82698468e+08,   2.83822165e+08,   2.85723846e+08,   2.88070334e+08,
   2.90275526e+08,   2.92726079e+08,   2.95307188e+08,   2.98615170e+08,
   3.01233343e+08,   3.03541376e+08,   3.07661267e+08,  3.12310941e+08,
   3.15741639e+08,   3.19021102e+08,   3.26634905e+08,   3.25982057e+08,
   3.29533084e+08,  3.35109350e+08,   3.40568673e+08,  3.45731671e+08,
   3.51673306e+08,   3.57098866e+08])
turbineH1diff = np.array([ 125.58779547,  125.92421627,  126.9482126,   128.40369685,  129.51799296,
  130.7758175,   131.94495749,  133.34303903,  134.33532233,  135.26172381,
  136.74044076,  138.08777879,  138.27551276,  138.19356306,  137.9323678,
  125.56906305, 125.77170103,  128.0862233,   129.4463291,   130.8564549,
  132.6946073,   132.69567097])
turbineH2diff = np.array([  73.2,          73.2,          73.2,          73.2,          73.2,          73.2,
   73.2,          73.2,          73.2,          73.2,          73.84827281,
   78.27650695,   82.97626489,   87.69112024,  106.1464802,   125.47515325,
  125.65813476,  125.69292109,  125.92456725,  125.68318632,  125.80501279,
  127.55178378])
diffArraydiff = np.array([ 52.38779547,  52.72421627,  53.7482126,   55.20369685,  56.31799296,
  57.5758175,   58.74495749,  60.14303903,  61.13532233,  62.06172381,
  62.89216795,  59.81127184,  55.29924786,  50.50244282,  31.7858876,
   0.09390979,   0.11356627,   2.3933022,    3.52176185,   5.17326858,
   6.88959451,   5.14388719])

#worst
COEworst = np.array([ 82.66463907,  82.66463907,  82.66463907,  82.66463907,  82.66463907,
  82.66463907,  82.66463907,  82.66463907,  82.66463907,  82.66463907,
  82.66463907,  82.66463907,  82.66463907,  82.66463907,  82.66463907,
  82.66463907,  82.66463907,  82.66463907,  82.66463907,  82.66463907,
  82.66463907,  82.66463907])
AEPworst = np.array([  2.53586380e+08,   2.53586380e+08,   2.53586380e+08,   2.53586380e+08,
   2.53586380e+08,   2.53586380e+08,   2.53586380e+08,   2.53586380e+08,
   2.53586380e+08,   2.53586380e+08,   2.53586380e+08,   2.53586380e+08,
   2.53586380e+08,   2.53586380e+08,   2.53586380e+08,   2.53586380e+08,
   2.53586380e+08,   2.53586380e+08,   2.53586380e+08,   2.53586380e+08,
   2.53586380e+08,   2.53586380e+08])


#same_opt
COEsame = np.array([ 76.6704938,   75.88379508,  75.91521982,  75.44044132,  74.96183399,
  74.35195014,  73.88049627,  73.27650062,  72.61086635,  71.95092613,
  71.29811286,  70.65249287,  70.01401431,  69.38196865,  68.15027278,
  68.13923023,  67.53166465,  66.92977943,  66.37129893,  65.68328319,
  65.09233123,  64.45933299 ])
AEPsame = np.array([  2.63321281e+08,   2.69144328e+08,   2.71194617e+08,   2.73561069e+08,
   2.78060869e+08,   2.79397313e+08,   2.88097097e+08,   2.94292937e+08,
   2.97296922e+08,   3.00243168e+08,   3.03216831e+08,   3.06217386e+08,
   3.09245243e+08,   3.12304524e+08,   3.18559437e+08,   3.19386562e+08,
   3.24044808e+08,   3.30055627e+08,   3.36407067e+08,   3.40997247e+08,
   3.47699796e+08,   3.52254651e+08 ])
turbineH1same = np.array([ 105.28846604,  109.52089719,  112.56595856,  113.2419972,   116.24508861,
  114.98507409,  121.94666311,  125.28593097,  125.34896369,  125.32986939,
  125.31127914,  125.29315227,  125.27571581,  125.25947289,  125.29375874,
  125.7301963,   126.50969669,  127.89448844,  129.29900125,  129.7633681,
  131.18774815,  131.51340422         ])
turbineH2same = np.array([ 105.28846604,  109.52089719,  112.56595856,  113.2419972,   116.24508861,
  114.98507409,  121.94666311,  125.28593097,  125.34896369,  125.32986939,
  125.31127914,  125.29315227,  125.27571581,  125.25947289,  125.29375874,
  125.7301963,   126.50969669,  127.89448844,  129.29900125,  129.7633681,
  131.18774815,  131.51340422         ])


#same original Height
COEorg = np.ones(len(shear_ex))*81.05763899
AEPorg = np.ones(len(shear_ex))*2.59023687e+08


COESNOPT = np.array([ 75.8956249,   76.25413369,  74.72705363,  75.76531384,  74.52714369,
  78.83251908,  74.34994924,  77.88024285,  73.09011471,  72.52891126,
  68.55499887])
AEPSNOPT = np.array([  2.48133050e+08,   2.83890866e+08,  2.91809174e+08,   2.91866320e+08,
   2.94605338e+08,   2.38044906e+08,   3.04651040e+08,   2.41193201e+08,
   3.13510885e+08,   3.18392262e+08,   3.16536686e+08])
turbineH1SNOPT = np.array([  73.2,         126.59384063,  127.49719511,  129.88477041 , 128.52944106,
   73.2,         133.14678038,   73.2,         134.52716341,  135.46384331,
  125.31127878])
turbineH2SNOPT = np.array([ 126.19261359,   73.2,          73.2,          73.2,          73.2,
  133.60224562,   73.2,         134.2717134,    73.2,          73.2,
  125.31127878])
diffArraySNOPT = np.array([  5.29926136e+01,   5.33938406e+01,   5.42971951e+01,   5.66847704e+01,
   5.53294411e+01,   6.04022456e+01,   5.99467804e+01,   6.10717134e+01,
   6.13271634e+01,   6.22638433e+01,   5.46265255e-11])
costSNOPT = np.array([  1.13515882e+08,   1.38978224e+08,   1.40054762e+08,   1.43064119e+08
,   1.41358389e+08,   1.13467894e+08 ,  1.47567368e+08,   1.13460731e+08
,   1.49622500e+08,   1.51076151e+08,   1.37535617e+08])
#



COEyaw = np.array([ 70.22088756 , 70.06795328,  69.88794264,  69.87365213 , 69.74753201,
  69.68037607 , 69.500524   , 69.22937972 , 69.02511787 , 68.97761435,
  68.64175338 , 68.4578451  , 67.97552546 , 67.48913527 , 66.55243912,
  63.0047289  , 62.57516059 , 62.2699919  , 61.79943748 , 61.44873816,
  61.1159405  , 60.31994086 ])
AEPyaw = np.array([ 2.95927009e+08  , 2.97043515e+08  , 2.99260634e+08  , 3.01368577e+08,
   3.03593275e+08,   3.05829436e+08,   3.08550235e+08,   3.12186822e+08,
   3.14915553e+08 ,  3.16808475e+08 ,  3.21467351e+08 ,  3.26500132e+08,
   3.30998742e+08 ,  3.35029774e+08 ,  3.45918932e+08 ,  3.47863620e+08,
   3.50912326e+08 ,  3.57155342e+08 ,  3.62960543e+08 ,  3.68122107e+08,
   3.74461890e+08 ,  3.80551299e+08])

#
#
AEPdiff = AEPdiff*10**-6
AEPsame = AEPsame*10**-6
AEPorg = AEPorg*10**-6
AEPworst = AEPworst*10**-6
AEPyaw = AEPyaw*10**-6

plt.figure(4)
plt.plot(shear_ex, AEPyaw, c='m', label='Opt XYZ: Diff \n & Yaw')
plt.plot(shear_ex, AEPyaw, 'om')
plt.plot(shear_ex, AEPdiff, c='b', label='Opt XYZ: Diff')
plt.plot(shear_ex, AEPdiff, 'ob')
plt.plot(shear_ex, AEPsame, c='r', label='Opt XYZ: Same')
plt.plot(shear_ex, AEPsame, 'or')
plt.plot(shear_ex, AEPorg, c='g', label='Opt XY')
plt.plot(shear_ex, AEPorg, 'og')
plt.plot(shear_ex, AEPworst, c='k', label='Grid')
plt.plot(shear_ex, AEPworst, 'ok')
plt.title('AEP vs Shear Exponent')
plt.xlabel(r'Shear Exponent $\alpha$')
plt.ylabel('AEP (GWhrs)')
leg = plt.legend(loc=2)
leg.get_frame().set_alpha(0.0)


plt.figure(5)
plt.plot(shear_ex, COEworst, c='k', label='Grid')
plt.plot(shear_ex, COEworst, 'ok')
plt.plot(shear_ex, COEorg, c='g', label='Opt XY')
plt.plot(shear_ex, COEorg, 'og')
plt.plot(shear_ex, COEsame, c='r', label='Opt XYZ: Same')
plt.plot(shear_ex, COEsame, 'or')
plt.plot(shear_ex, COEdiff, c='b', label='Opt XYZ: Diff')
plt.plot(shear_ex, COEdiff, 'ob')
plt.plot(shear_ex, COEyaw, c='m', label='Opt XYZ: Diff')
plt.plot(shear_ex, COEyaw, 'om')
plt.title('COE vs Shear Exponent')
plt.xlabel(r'Shear Exponent $\alpha$')
plt.ylabel('COE $/MWhr')

plt.show()

# #
# # plt.title('COE vs Shear Exponent')
# # plt.legend(loc=3)
# # plt.show()
#
# # #
# plt.figure(6)
# plt.plot(shear_ex, diffArraydiff)
# plt.title('Height Difference vs Shear Exponent')
# plt.scatter(shear_ex, diffArraydiff)
# plt.xlabel(r'Shear Exponent $\alpha$')
# plt.ylabel('Height Difference: H1-H2 (m)')
# plt.show()
# #
# # plt.figure(7)
# # plt.plot(shear_exSNOPT, COESNOPT, c='r', label = 'SNOPT')
# # plt.plot(shear_exSNOPT, COEdiff[0:11], c='b', label='Scipy')
# # plt.title('SNOPT vs SP COE')
# #
# # plt.legend()
# #
# # plt.figure(8)
# # plt.plot(shear_exSNOPT, AEPSNOPT, c='r', label = 'SNOPT')
# # plt.plot(shear_exSNOPT, AEPdiff[0:11], c='b', label='Scipy')
# # plt.legend(loc=2)
# # plt.title('SNOPT vs SP AEP')
# # plt.show()
#
#
#
# # #New Scaling attempt
# # COEtry3 = np.array([ 81.78849023,  51.4400408,   46.39367331,  44.24040164,  43.13091941,
# #   42.85834583,  42.05284642,  41.88867347,  42.76852868,  41.31902899,
# #   41.34236182,  41.50740186])
# # AEPtry3 = np.array([  2.42884372e+08,   4.03066337e+08,   4.50225529e+08,   4.75553840e+08,
# #    4.89047878e+08,   4.93438780e+08,   5.03924446e+08,   5.06811941e+08,
# #    4.94596145e+08,   5.15011616e+08,   5.14670547e+08,   5.12182832e+08])
# # turbineH1try3 = np.array([ 97.0520237,   95.99559809,  94.48629027,  94.44165326,  93.77409383,
# #   94.44165326,  93.95079269,  94.44165326,  94.39030706,  94.44165326,
# #   94.44165326,  94.36873239])
# # turbineH2try3 = np.array([ 73.2,         73.2,         89.657211,    94.44165326,  93.2229259,
# #   94.44165326,  93.78671886,  94.44165326,  94.41083329,  94.44165326,
# #   94.4416533,   93.36094529])
# # diffArraytry3 = np.array([  2.38520237e+01,   2.27955981e+01,   4.82907927e+00,   4.48608262e-10,
# #    5.51167924e-01,   3.71414899e-10,   1.64073823e-01,   6.66915412e-10,
# #    2.05262288e-02,   4.39968062e-10,   4.53042759e-08,   1.00778710e+00])
# # costtry3 = np.array([  1.23957084e+08,   1.22877583e+08,   1.21561158e+08,   1.21525088e+08,
# #    1.21250020e+08,   1.21525088e+08,   1.21323323e+08,   1.21525088e+08,
# #    1.21506539e+08,   1.21525088e+08,   1.21525088e+08,   1.21494525e+08])
# # timetry3 = np.array([ 0.17098689,  0.18308687,  0.18690681,  0.17260003,  0.17913389,  0.20006108,
# #   0.21199012,  0.231987,    0.19465399,  0.2006979,   0.23932195,  0.22862792])
# #
# # plt.figure(9)
# # space = np.array([2.0,2.5,3.0,3.5,4.0,4.5,5.0,5.5,6.0,6.5,7.0,7.5])
# # plt.plot(space, COEtry3)
# # plt.figure(10)
# # plt.plot(space, diffArraytry3)
# # plt.show()
#
#
# # """PLEASEWORK"""
# # spacing = np.array([2.0,2.5,3.0,3.5,5.0,6.5,7.0])
# # space = np.array([2.0,2.5,3.0,3.5,4.0,4.5])
# # COE_PLEASEWORK = np.array([ 93.21762368,  80.36153181,  73.0353312,   69.93962664,  64.18712642,
# #   60.13487758,  61.49681871])
# # AEP_PLEASEWORK = np.array([  2.30553450e+08,   2.63810460e+08,   2.82034468e+08,   2.93555988e+08,
# #    3.24463739e+08,   3.48136483e+08,   3.38540829e+08])
# # turbineH1_PLEASEWORK = np.array([ 133.25219719,  129.06324416,  121.6495902,   119.96237134,  119.78550667,
# #   110.14871136,  110.40499827])
# # turbineH2_PLEASEWORK = np.array([  73.2,          73.2,          73.2,          73.2,          81.08800717,
# #   110.02756915,  105.09423102])
# # diffArray_PLEASEWORK = np.array([ 60.05219719,  55.86324416,  48.4495902,   46.76237134,  38.6974995,
# #    0.12114221,   5.31076725])
# #
# # COE_same = np.array([ 99.36096822,  84.69422468,  76.02253007,  72.7729721,   75.78491752,
# #   64.99915512])
# # AEP_same = np.array([  2.01067399e+08,   2.39345568e+08,   2.68897579e+08,   2.82037770e+08,
# #    2.69388158e+08,   3.17608422e+08])
# # turbineH1_same = np.array([ 108.91471459,  110.12918875,  109.94210392,  109.97912542,  109.3177633,
# #   107.97349681])
# #
# #
# # plt.figure(1)
# # plt.plot(spacing, COE_PLEASEWORK, 'r')
# # plt.plot(space, COE_same, 'b')
# # plt.title('COE vs. Initial Grid Spacing')
# # plt.figure(2)
# # plt.plot(spacing, AEP_PLEASEWORK, 'r')
# # plt.plot(space, AEP_same, 'b')
# # plt.title('AEP vs. Initial Grid Spacing')
# # plt.figure(3)
# # plt.plot(spacing, diffArray_PLEASEWORK)
# # plt.title('Height Difference vs. Initial Grid Spacing')
# #
# # plt.show()
#
#
# """Super Computer Runs"""
#
# """Shear Exponent"""
# COEoptXY = 77.29545752
# AEPoptXY = 2.72713198e+08
# COEstart = 80.18312078
# AEPstart = 2.62081759e+08
#
#
#
# COE = np.array([ 73.86759287,  73.788765,    73.09231326,  73.63068405,  72.0710126,
#   70.94375463,  71.0236194,   72.1903174,   70.51074893,  71.49382577,
#   70.27848752,  69.88042611,  68.98058351,  68.95304826,  68.25290253,
#   67.64486619,  67.32885853])
# AEP = np.array([  2.79925163e+08,   2.80222335e+08,   2.83107575e+08,   2.80822736e+08,
#    2.87435427e+08,   2.92408784e+08,   2.92309203e+08 ,  2.86893233e+08,
#    2.94643243e+08,   2.91968127e+08,   2.97673613e+08,   3.01569112e+08,
#    3.11488357e+08,   3.14261924e+08,   3.17775361e+08,   3.20884603e+08,
#    3.22520194e+08])
# turbineH1 = np.array([ 125.51949303,  125.49628736,  125.473719 ,   125.45164029,  125.43008418,
#   125.41918866,  125.64009047,  125.42381665 , 125.64621415,  126.99185498,
#   126.66892736 , 128.19251617,  125.20924347,  125.1520072 ,  125.1497728,
#   125.13591532,  125.12245657])
# turbineH2 = np.array([  73.2,          73.2 ,         73.2  ,        73.2  ,       73.2  ,        73.2,
#    73.2       ,   73.2      ,    73.20799867 ,  73.20012031,   75.64530478,
#    75.25909126,  114.28136315,  125.17868987,  125.1497728 ,  125.11679744,
#   125.12089304])
# diffArray = np.array([  5.23194930e+01 ,  5.22962874e+01 ,  5.22737190e+01 ,  5.22516403e+01,
#    5.22300842e+01,   5.22191887e+01,   5.24400905e+01,   5.22238166e+01,
#    5.24382155e+01,   5.37917347e+01,   5.10236226e+01,   5.29334249e+01,
#    1.09278803e+01,   2.66826713e-02,   8.58236149e-10,   1.91178760e-02,
#    1.56353083e-03])
#
#
#
# COEjustH = np.array([  73.64810998,  73.53935338,  73.42632741 , 73.32221744 , 73.21685524,
#   73.11099255 , 73.00318036,  72.90248478 , 72.80076359 , 72.69739481,
#   72.61097543,  72.51715035 , 72.41138301,  72.29808874 , 72.05267897,
#   71.70487544 , 71.23186397,  70.87803746 , 69.94794245,  69.57378563,
#   69.23680585,  68.85033167 , 68.49673206])
# AEPjustH = np.array([  2.80834612e+08,   2.81258855e+08,   2.81689900e+08,   2.82111551e+08,
#    2.82527474e+08 ,  2.82947520e+08,   2.83373410e+08 ,  2.83779879e+08,
#    2.84188170e+08 ,  2.84605374e+08  , 2.85247120e+08  , 2.85923568e+08,
#    2.86649552e+08 ,  2.88477457e+08,   2.95097440e+08 ,  2.97104221e+08,
#    3.00656750e+08 ,  3.02342084e+08 ,  3.09390094e+08 ,  3.11187185e+08,
#    3.12712243e+08 ,  3.14724057e+08 ,  3.16483071e+08])
# diffArrayjustH = np.array([  5.23196471e+01,   5.22963230e+01,   5.22783190e+01 ,  5.22516378e+01,
#    5.22300712e+01,   5.22090408e+01,   5.21866454e+01,   5.21684793e+01,
#    5.21489342e+01,   5.21298695e+01,   5.21583187e+01,   5.13300474e+01,
#    5.07591668e+01,   4.50668333e+01,   1.90790957e+01,   1.71111087e+01,
#    1.11918389e+01,   1.08999222e+01,   9.40814129e-04,   4.62819561e-04,
#    4.45418400e-01,   1.03887263e-03,   8.10909674e-04])
#
#
#
# shearSAME = np.array([0.09,0.14,0.15,0.16,0.18,0.22,0.23,0.24])
# COEsame = np.array([ 75.72973117,  81.30404614 , 77.97424242,  76.42545831,  77.28921607,
#   75.14475049 , 74.90589417,  75.41415869])
# AEPsame = np.array([  2.54979559e+08  , 2.48781728e+08,  2.62942542e+08,   2.69644966e+08,
#    2.66795860e+08  , 2.81275170e+08  , 2.83567360e+08 ,  2.83605750e+08])
#
#
#
# # """These are bad"""
# # COEsame = np.array([ 73.4191932,   81.45382481,  77.68242536,  79.48386977,  80.0442474,
# #   89.78503994 , 78.01322276 , 76.51235826,  76.64904834,  79.68610544,
# #   75.34321347 , 75.85175983 , 77.00366685,  78.53271946,  75.02472328,
# #   75.05188044 , 73.58512177 , 72.2027516 ,  72.26029757])
# # AEPsame = np.array([  2.58907423e+08,   2.39212099e+08,   2.53838861e+08,   2.49610394e+08,
# #    2.51977457e+08 ,  2.24639566e+08,   2.62391046e+08,   2.69591419e+08,
# #    2.69406841e+08,   2.59464305e+08,   2.77226127e+08,   2.76795147e+08,
# #    2.76083551e+08,   2.71115091e+08,   2.86623064e+08,   2.86484968e+08,
# #    2.92687490e+08,   2.98784402e+08,   2.98500390e+08])
# # turbineH1same = np.array([  76.50247913,   92.24167663,   95.82118192,   99.29804853,  106.45610326,
# #   109.93065198,  111.35441709,  113.58682318,  114.00954111 , 115.476895,
# #   117.13871899 , 118.8375675 ,  122.72919495,  123.59863126 , 125.19375982,
# #   125.17868987 , 125.16402931,  125.1497728 ,  125.13591474])
#
#
#
# shearExp = np.array([0.08,0.09,0.1,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29,0.3])
# shear_diff = np.array([0.08,0.09,0.1,0.11,0.12,0.16,0.17,0.18,0.2,0.21,0.22,0.23,0.24,0.26,0.28,0.29,0.3])
# shear_same = np.array([0.08,0.1,0.11,0.12,0.13,0.14,0.15,0.17,0.18,0.19,0.2,0.21,0.23,0.24,0.25,0.26,0.27,0.28,0.29])
# COEstart = np.ones(len(shear_diff))*COEstart
# AEPstart = np.ones(len(shear_diff))*AEPstart
# COEoptXY = np.ones(len(shear_diff))*COEoptXY
# AEPoptXY = np.ones(len(shear_diff))*AEPoptXY
#
# COEwarm = np.array([ 68.86228019 , 68.69984061,  68.46849003,  68.40490598,  68.30099967,
#   68.202315  ,  68.10618141 , 68.10311152,  67.89921612 , 67.65969811,
#   67.51522532 , 69.39520348 , 69.10484024,  68.64851019 , 68.31771998,
#   67.89418198 , 67.49914534])
# AEPwarm = np.array([  2.84772287e+08 ,  2.85505274e+08 ,  2.86563679e+08 ,  2.86865269e+08,
#    2.87353569e+08,   2.87813284e+08,   2.88264949e+08,   2.88289751e+08,
#    2.89417161e+08,   2.94027387e+08,   2.94719168e+08,   3.02657954e+08,
#    3.04067497e+08,   3.06299298e+08,   3.07956646e+08,   3.10115067e+08,
#    3.12182439e+08])
#
# #0.16 heights, same positions
# COE=np.array([68.85741624,  68.69086556,  68.45909098 , 68.40490598 , 68.31038098,
#   68.21493197 , 68.12446139,  68.1304065 ,  67.97278199,  67.72305344,
#   67.63752049,  67.62604896,  67.5330128,   67.37846545 , 67.28169123,
#   67.147638 ,   66.93597483])
# #0.16 heights, 0.16 positions
# COE=np.array([68.65278092,  68.5666169,   68.48561659,  68.40490598,  68.32505752,
#   68.24574343 , 68.16569841 , 68.08442508,  68.00311899 , 67.92061006,
#   67.83563054 , 67.74853163 , 67.659251 ,   67.57250479 , 67.48417595,
#   67.39729867 , 67.31246116])
#
#
#
# COEwarmsamemax = np.array([ 70.78336508,  70.49398789 , 69.85897094 , 69.5125623,   69.10052534,
#   68.69579112 , 68.36226468,  68.10224795,  67.63760998,  67.5089288,
#   67.14379432 , 68.92541334,  68.58805467,  68.07969999 , 67.71497094,
#   67.2536096 ,  66.83535312])
# AEPwarmsamemax = np.array([  2.85548239e+08,   2.86829766e+08,   2.89686593e+08 ,  2.91267887e+08,
#    2.93172265e+08 ,  2.95067948e+08 ,  2.96648620e+08 ,  2.97894146e+08,
#    3.00231895e+08 ,  3.03165048e+08 ,  3.04978731e+08  , 3.07532420e+08,
#    3.09202718e+08 ,  3.11748125e+08 ,  3.13613507e+08 ,  3.16012489e+08,
#    3.18238384e+08])
#
#
#
# diffArraywarm = np.array([ 52.20904445,  52.18242758 , 52.17925843,  52.23885348 , 52.29521563,
#   52.31372768,  52.3457121,   52.39271974,  52.45297257,  47.47026544,
#   47.47026544,  11.22615757,  11.19690482,  11.1731873 ,  11.12409161,
#   11.05005675,  10.95693101])
#
#
# warmshear = np.array([0.13,0.14,0.15,0.16,0.17,0.18,0.19,0.2,0.21,0.22,0.23,0.24,0.25,0.26,0.27,0.28,0.29])
#
#
# COEXYZ = np.array([ 69.20824235,  69.02345424 , 69.04240136 , 68.92619263  ,68.79285471,
#   68.70204519 , 68.6223578  , 68.54149895,  68.46210212 , 68.37553124,
#   68.24639205 , 68.2096179  , 68.11876388 , 67.75745437 , 67.96770899,
#   68.36012313 , 69.46511429 , 69.54966447,  69.84973656,  69.58364406,
#   69.21535198 , 68.86159624 , 68.50943856])
# AEPXYZ = np.array([  2.83171606e+08,   2.84273264e+08,   2.84063833e+08 ,  2.84635941e+08,
#    2.85302840e+08 ,  2.85702978e+08 ,  2.86078386e+08 ,  2.86444622e+08,
#    2.86808962e+08 ,  2.87132095e+08 ,  2.87860330e+08 ,  2.88055241e+08,
#    2.88662377e+08 ,  2.91285963e+08 ,  2.92473669e+08 ,  2.94858327e+08,
#    2.98748904e+08 ,  3.02614732e+08  , 3.08463105e+08 ,  3.11135603e+08,
#    3.12928776e+08 ,  3.14667516e+08  , 3.16418573e+08])
# diffArrayXYZ = np.array([  5.12828154e+01 ,  5.22971052e+01 ,  5.15444614e+01,   5.18267494e+01,
#    5.21912327e+01 ,  5.22091344e+01 ,  5.21885129e+01 ,  5.21833683e+01,
#    5.21772627e+01  , 5.21297704e+01 ,  5.25120763e+01 ,  5.21765994e+01,
#    5.19959257e+01  , 5.20059756e+01 ,  4.68632088e+01 ,  3.77566225e+01,
#    1.72816147e+01  , 1.02486783e+01 ,  1.51978966e+00 ,  1.59227540e-03,
#    2.09534012e-05  , 5.84416412e-06  , 2.49420254e-05])
#
# COEZ = np.array([ 74.14503015 , 74.27668985 , 74.35043562,  74.30843452 , 74.12866727,
#   73.93790697 , 73.71629123 , 73.45794085,  73.17435911,  72.87877192,
#   64.39355116 , 63.97096663 , 63.53554184 , 65.36050066,  63.5871414,
#   63.19679928 , 62.80802123,  62.42844226 , 62.0441094,   61.65781858,
#   61.26535473 , 60.87762944,  60.50069054])
# AEPZ = np.array([  2.57779859e+08,   2.60060139e+08 ,  2.62849331e+08,   2.66402132e+08,
#    2.69999591e+08 ,  2.74393794e+08,   2.76473426e+08,   2.80235981e+08,
#    2.82690231e+08 ,  2.84271547e+08,   2.99944730e+08,   3.02617309e+08,
#    3.05246553e+08 ,  3.01578520e+08,   3.12538112e+08,   3.14737087e+08,
#    3.16905696e+08 ,  3.19059342e+08 ,  3.21093686e+08,   3.22990415e+08,
#    3.24737539e+08 ,  3.26358940e+08 ,  3.27840429e+08])
#
# COESAME = np.array([ 71.81339627,  71.87924825 , 71.97779887,  71.9078803  , 71.69399783,
#   71.70385278,  71.41856787,  71.17628114 , 70.91447904 , 70.38951076,
#   62.58535396,  62.05183852,  61.63317852 , 63.78902787 , 62.22434131,
#   61.33288845,  60.96543818 , 60.61534144 , 60.25109907 , 59.8827985,
#   59.50208302 , 59.12429547 , 58.74787246])
# AEPSAME = np.array([  2.65951079e+08 ,  2.69149224e+08,   2.71821878e+08 ,  2.76033127e+08,
#    2.80410458e+08,   2.82935101e+08 ,  2.86064817e+08,   2.90056503e+08,
#    2.92549793e+08,   2.96668143e+08  , 3.09267122e+08 ,  3.13058402e+08,
#    3.15780369e+08 ,  3.08832372e+08 ,  3.18787107e+08 ,  3.25458969e+08,
#    3.27644621e+08 ,  3.29750445e+08 ,  3.31805357e+08 ,  3.33731607e+08,
#    3.35555684e+08 ,  3.37259626e+08 ,  3.38888077e+08])
#
# plt.figure(1)
# plt.plot(shear_diff, COEstart, 'k', label='Starting Grid')
# plt.plot(shear_diff, COEoptXY, 'y', label='Position')
# plt.plot(shearExp, COEjustH,'r', label='Different Heights')
# plt.plot(shearExp, COEXYZ, 'b', label='Different Heights and Position')
# # plt.plot(shearExp, COEZ, 'g', label='Same Heights and Position')
# plt.plot(shearExp, COESAME, 'g', label='Same Heights and Position')
# plt.plot(warmshear, COEwarm, 'o')
#
# # plt.plot(shear_same, COEsame, 'r')
#
#
# plt.title('COE vs. Shear Exponent')
# # plt.legend(loc=3)
#
# plt.figure(2)
# # plt.plot(shear_diff, AEP, label='Different Heights and Position')
# plt.plot(warmshear, AEPwarmsamemax, 'g')
# plt.plot(warmshear, AEPwarm, label='Warm')
# plt.plot(shearExp, AEPjustH,'r', label='Different Heights')
# # plt.plot(shear_same, AEPsame, 'r')
# plt.plot(shear_diff, AEPoptXY, 'y', label='Position')
# plt.plot(shear_diff, AEPstart, 'k', label='Starting Grid')
# plt.title('AEP vs. Shear Exponent')
# plt.legend(loc=2)
#
#
# plt.figure(3)
# plt.plot(shear_diff, diffArray,label='Heights and Position')
# plt.plot(shearExp, diffArrayjustH, 'r', label='Just Heights')
# plt.legend(loc=3)
# plt.title('Optimized Height Differences vs. Shear Exponent')
# plt.show()
#
#
# """Spacing"""
# spacing = np.array([2.0,2.5,3.0,3.5,4.0,4.5,5.0,5.5,6.0,6.5,7.0,7.5,8.0,8.5,9.0,9.5,10.0])
# COEjustH = np.array([ 86.90292811,  78.56603361 , 73.42632741,  70.01187287 , 67.7588661,
#   65.82993967 , 64.4841908  , 63.51019145,  62.66937208,  62.10561101,
#   61.48705722 , 61.11719921 , 60.28046127,  60.41798515 , 59.76979875,
#   59.59427848 , 59.44996681])
# AEPjustH = np.array([  2.35745102e+08 ,  2.61720362e+08  , 2.81689900e+08 ,  2.93169635e+08,
#    3.03163396e+08 ,  3.08208336e+08  , 3.14810572e+08 ,  3.19441260e+08,
#    3.21559974e+08 ,  3.24817235e+08  , 3.24651383e+08,   3.26881801e+08,
#    3.29886713e+08 ,  3.29012831e+08  , 3.33354648e+08 ,  3.33778946e+08,
#    3.35219880e+08])
# diffArrayjustH = np.array([ 53.29242791 , 52.27413709,  52.27831899,  47.5966636,   46.64332533,
#   39.98229517 , 39.15222388,  37.91218895,  33.17742385,  33.14996763,
#   25.85298956 , 25.46676211,   0.96133067,  18.56459207 ,  0.5499481,
#    0.33390021 ,  1.91393402])
#
# COEstart = np.array([ 99.91767557,  87.5671295  , 80.18312078  ,75.44220645 , 72.43496816,
#   70.35558314 , 68.74952107,  67.54760341 , 66.7369715 ,  66.0702278,
#   65.52327548 , 65.0765847 ,  64.72764615,  64.43299484 , 64.17791629,
#   63.95883514 , 63.77454812])
# AEPstart = np.array([  2.06946965e+08,   2.38324305e+08 ,  2.62081759e+08 ,  2.80002826e+08,
#    2.92698426e+08,   3.02171960e+08 ,  3.09919575e+08 ,  3.15982602e+08,
#    3.20207546e+08 ,  3.23768179e+08 ,  3.26748755e+08,   3.29223981e+08,
#    3.31183783e+08 ,  3.32856943e+08 ,  3.34319105e+08,   3.35585215e+08,
#    3.36657694e+08])
#
#
#
#
# shear_diff = np.array([2.0,2.5,3.0,4.5,10.0])
# COE = np.array([ 86.89721107,  76.13444305 , 73.09231326,  71.19194578 , 58.96203548])
# AEP = np.array([  2.35591188e+08,   2.70808297e+08,   2.83107575e+08,   2.91374206e+08,
#    3.38779572e+08])
# turbineH1 = np.array([ 126.33270692 , 125.4737191 ,  125.473719,    125.473719 ,    89.28912733])
# turbineH2 = np.array([ 73.2     ,    73.2  ,       73.2  ,       73.2 ,        89.21916899])
# diffArray = np.array([ 53.13270692 , 52.2737191 ,  52.273719   , 52.273719  ,   0.06995834])
#
#
#
# shear_same = np.array([2.0,2.5,3.0,3.5,4.0,5.0,9.5,10.0])
# COEsame = np.array([ 92.81700954 , 82.27843772,  81.45382481  ,73.41211299 , 71.19822427,
#   74.28687375 , 67.26287671,  70.09845299])
# AEPsame = np.array([  2.09737710e+08 ,  2.35512849e+08 ,  2.39212099e+08  , 2.65107017e+08,
#    2.75324801e+08 ,  2.62968123e+08 ,  2.91309913e+08 ,  2.79223124e+08])
# turbineH1same = np.array([ 95.90526596,  90.11422858 , 92.24167663 , 87.63813654 , 89.6493441,
#   89.85699705 , 86.92825186 , 88.38020862])
#
#
# plt.figure(4)
# plt.plot(spacing, COEstart,'r', label='Starting Grid')
# plt.plot(spacing, COEjustH, label='Different Heights')
# plt.legend(loc=3)
# plt.title('COE vs. Spacing')
# # plt.plot(shear_diff, COE)
# # plt.plot(shear_same, COEsame, 'r')
#
# plt.figure(5)
# plt.plot(spacing, AEPjustH, label='Different Heights')
# plt.plot(spacing, AEPstart,'r', label='Starting Grid')
# plt.legend(loc=2)
# plt.title('AEP vs. Spacing')
# # plt.plot(shear_diff, AEP)
# # plt.plot(shear_same, AEPsame, 'r')
#
#
# plt.figure(6)
# plt.plot(spacing, diffArrayjustH)
# plt.title('Optimized Height Differences vs. Spacing')
#
#
# plt.show()
